name: Deploy

on:
  push:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: dynow/dynow-bot:latest

jobs:
    publish:
        name: publish image
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v3

        - name: Login
          run: |
            echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        - name: Build and Publish

          run: |
            docker build . --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    deploy:
        needs: publish
        name: deploy image
        runs-on: ubuntu-latest

        steps:
        - name: Tailscale
          uses: tailscale/github-action@v2
          with:
            oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
            oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
            tags: tag:ci
        
        - name: install ssh keys
          run: |
            install -m 600 -D /dev/null ~/.ssh/id_rsa
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            ssh-keyscan -p ${{ secrets.SSH_PORT }} -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
        
        - uses: actions/checkout@v3
        
        - name: copy docker-compose file
          run: scp -P ${{ secrets.SSH_PORT }} docker-compose.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.WORK_DIR }}  
        - name: connect and pull&deploy
          run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} -p ${{ secrets.SSH_PORT }} "cd ${{ secrets.WORK_DIR }} && MONGO_USER=${{ secrets.MONGO_USER }} MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }} DYNOW_BOT_TOKEN=${{ secrets.DYNOW_BOT_TOKEN }} docker compose pull && docker compose up -d && exit"
        
        - name: cleanup
          run: rm -rf ~/.ssh
